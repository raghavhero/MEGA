# script writer : r a g h a v
# encrypted : lord raghav
# team : mega mind
# ------------------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))